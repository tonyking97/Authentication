// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authpb.proto

package authpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{0}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LoginRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{1}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Token                *Token   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{2}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *LoginResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *LoginResponse) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type CheckUsernameRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUsernameRequest) Reset()         { *m = CheckUsernameRequest{} }
func (m *CheckUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUsernameRequest) ProtoMessage()    {}
func (*CheckUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{3}
}

func (m *CheckUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUsernameRequest.Unmarshal(m, b)
}
func (m *CheckUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUsernameRequest.Marshal(b, m, deterministic)
}
func (m *CheckUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUsernameRequest.Merge(m, src)
}
func (m *CheckUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUsernameRequest.Size(m)
}
func (m *CheckUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUsernameRequest proto.InternalMessageInfo

func (m *CheckUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type CheckUsernameResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Avatar               string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUsernameResponse) Reset()         { *m = CheckUsernameResponse{} }
func (m *CheckUsernameResponse) String() string { return proto.CompactTextString(m) }
func (*CheckUsernameResponse) ProtoMessage()    {}
func (*CheckUsernameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{4}
}

func (m *CheckUsernameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUsernameResponse.Unmarshal(m, b)
}
func (m *CheckUsernameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUsernameResponse.Marshal(b, m, deterministic)
}
func (m *CheckUsernameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUsernameResponse.Merge(m, src)
}
func (m *CheckUsernameResponse) XXX_Size() int {
	return xxx_messageInfo_CheckUsernameResponse.Size(m)
}
func (m *CheckUsernameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUsernameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUsernameResponse proto.InternalMessageInfo

func (m *CheckUsernameResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CheckUsernameResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CheckUsernameResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CheckUsernameResponse) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type CheckUsernameAvailabilityRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUsernameAvailabilityRequest) Reset()         { *m = CheckUsernameAvailabilityRequest{} }
func (m *CheckUsernameAvailabilityRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUsernameAvailabilityRequest) ProtoMessage()    {}
func (*CheckUsernameAvailabilityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{5}
}

func (m *CheckUsernameAvailabilityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUsernameAvailabilityRequest.Unmarshal(m, b)
}
func (m *CheckUsernameAvailabilityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUsernameAvailabilityRequest.Marshal(b, m, deterministic)
}
func (m *CheckUsernameAvailabilityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUsernameAvailabilityRequest.Merge(m, src)
}
func (m *CheckUsernameAvailabilityRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUsernameAvailabilityRequest.Size(m)
}
func (m *CheckUsernameAvailabilityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUsernameAvailabilityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUsernameAvailabilityRequest proto.InternalMessageInfo

func (m *CheckUsernameAvailabilityRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type CheckUsernameAvailabilityResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUsernameAvailabilityResponse) Reset()         { *m = CheckUsernameAvailabilityResponse{} }
func (m *CheckUsernameAvailabilityResponse) String() string { return proto.CompactTextString(m) }
func (*CheckUsernameAvailabilityResponse) ProtoMessage()    {}
func (*CheckUsernameAvailabilityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{6}
}

func (m *CheckUsernameAvailabilityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUsernameAvailabilityResponse.Unmarshal(m, b)
}
func (m *CheckUsernameAvailabilityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUsernameAvailabilityResponse.Marshal(b, m, deterministic)
}
func (m *CheckUsernameAvailabilityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUsernameAvailabilityResponse.Merge(m, src)
}
func (m *CheckUsernameAvailabilityResponse) XXX_Size() int {
	return xxx_messageInfo_CheckUsernameAvailabilityResponse.Size(m)
}
func (m *CheckUsernameAvailabilityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUsernameAvailabilityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUsernameAvailabilityResponse proto.InternalMessageInfo

func (m *CheckUsernameAvailabilityResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CheckUsernameAvailabilityResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CheckEmailAvailabilityRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckEmailAvailabilityRequest) Reset()         { *m = CheckEmailAvailabilityRequest{} }
func (m *CheckEmailAvailabilityRequest) String() string { return proto.CompactTextString(m) }
func (*CheckEmailAvailabilityRequest) ProtoMessage()    {}
func (*CheckEmailAvailabilityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{7}
}

func (m *CheckEmailAvailabilityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckEmailAvailabilityRequest.Unmarshal(m, b)
}
func (m *CheckEmailAvailabilityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckEmailAvailabilityRequest.Marshal(b, m, deterministic)
}
func (m *CheckEmailAvailabilityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckEmailAvailabilityRequest.Merge(m, src)
}
func (m *CheckEmailAvailabilityRequest) XXX_Size() int {
	return xxx_messageInfo_CheckEmailAvailabilityRequest.Size(m)
}
func (m *CheckEmailAvailabilityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckEmailAvailabilityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckEmailAvailabilityRequest proto.InternalMessageInfo

func (m *CheckEmailAvailabilityRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CheckEmailAvailabilityResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckEmailAvailabilityResponse) Reset()         { *m = CheckEmailAvailabilityResponse{} }
func (m *CheckEmailAvailabilityResponse) String() string { return proto.CompactTextString(m) }
func (*CheckEmailAvailabilityResponse) ProtoMessage()    {}
func (*CheckEmailAvailabilityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{8}
}

func (m *CheckEmailAvailabilityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckEmailAvailabilityResponse.Unmarshal(m, b)
}
func (m *CheckEmailAvailabilityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckEmailAvailabilityResponse.Marshal(b, m, deterministic)
}
func (m *CheckEmailAvailabilityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckEmailAvailabilityResponse.Merge(m, src)
}
func (m *CheckEmailAvailabilityResponse) XXX_Size() int {
	return xxx_messageInfo_CheckEmailAvailabilityResponse.Size(m)
}
func (m *CheckEmailAvailabilityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckEmailAvailabilityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckEmailAvailabilityResponse proto.InternalMessageInfo

func (m *CheckEmailAvailabilityResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CheckEmailAvailabilityResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SignupRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Firstname            string   `protobuf:"bytes,3,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Lastname             string   `protobuf:"bytes,4,opt,name=lastname,proto3" json:"lastname,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignupRequest) Reset()         { *m = SignupRequest{} }
func (m *SignupRequest) String() string { return proto.CompactTextString(m) }
func (*SignupRequest) ProtoMessage()    {}
func (*SignupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{9}
}

func (m *SignupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignupRequest.Unmarshal(m, b)
}
func (m *SignupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignupRequest.Marshal(b, m, deterministic)
}
func (m *SignupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignupRequest.Merge(m, src)
}
func (m *SignupRequest) XXX_Size() int {
	return xxx_messageInfo_SignupRequest.Size(m)
}
func (m *SignupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignupRequest proto.InternalMessageInfo

func (m *SignupRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignupRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SignupRequest) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *SignupRequest) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *SignupRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SignupError struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignupError) Reset()         { *m = SignupError{} }
func (m *SignupError) String() string { return proto.CompactTextString(m) }
func (*SignupError) ProtoMessage()    {}
func (*SignupError) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{10}
}

func (m *SignupError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignupError.Unmarshal(m, b)
}
func (m *SignupError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignupError.Marshal(b, m, deterministic)
}
func (m *SignupError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignupError.Merge(m, src)
}
func (m *SignupError) XXX_Size() int {
	return xxx_messageInfo_SignupError.Size(m)
}
func (m *SignupError) XXX_DiscardUnknown() {
	xxx_messageInfo_SignupError.DiscardUnknown(m)
}

var xxx_messageInfo_SignupError proto.InternalMessageInfo

func (m *SignupError) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SignupError) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type SignupResponse struct {
	Success              bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Err                  []*SignupError `protobuf:"bytes,3,rep,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SignupResponse) Reset()         { *m = SignupResponse{} }
func (m *SignupResponse) String() string { return proto.CompactTextString(m) }
func (*SignupResponse) ProtoMessage()    {}
func (*SignupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d650e9f73de9c, []int{11}
}

func (m *SignupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignupResponse.Unmarshal(m, b)
}
func (m *SignupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignupResponse.Marshal(b, m, deterministic)
}
func (m *SignupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignupResponse.Merge(m, src)
}
func (m *SignupResponse) XXX_Size() int {
	return xxx_messageInfo_SignupResponse.Size(m)
}
func (m *SignupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignupResponse proto.InternalMessageInfo

func (m *SignupResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SignupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SignupResponse) GetErr() []*SignupError {
	if m != nil {
		return m.Err
	}
	return nil
}

func init() {
	proto.RegisterType((*Token)(nil), "authpb.Token")
	proto.RegisterType((*LoginRequest)(nil), "authpb.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "authpb.LoginResponse")
	proto.RegisterType((*CheckUsernameRequest)(nil), "authpb.CheckUsernameRequest")
	proto.RegisterType((*CheckUsernameResponse)(nil), "authpb.CheckUsernameResponse")
	proto.RegisterType((*CheckUsernameAvailabilityRequest)(nil), "authpb.CheckUsernameAvailabilityRequest")
	proto.RegisterType((*CheckUsernameAvailabilityResponse)(nil), "authpb.CheckUsernameAvailabilityResponse")
	proto.RegisterType((*CheckEmailAvailabilityRequest)(nil), "authpb.CheckEmailAvailabilityRequest")
	proto.RegisterType((*CheckEmailAvailabilityResponse)(nil), "authpb.CheckEmailAvailabilityResponse")
	proto.RegisterType((*SignupRequest)(nil), "authpb.SignupRequest")
	proto.RegisterType((*SignupError)(nil), "authpb.SignupError")
	proto.RegisterType((*SignupResponse)(nil), "authpb.SignupResponse")
}

func init() { proto.RegisterFile("authpb.proto", fileDescriptor_db4d650e9f73de9c) }

var fileDescriptor_db4d650e9f73de9c = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x25, 0x75, 0x1d, 0xd2, 0x49, 0x83, 0xd0, 0x92, 0x44, 0xc1, 0x6a, 0x50, 0x58, 0x54, 0x14,
	0x2e, 0x3d, 0xb8, 0x02, 0x89, 0x0b, 0x52, 0x41, 0xe5, 0x84, 0x38, 0xa4, 0x45, 0x48, 0xdc, 0x36,
	0x66, 0x89, 0x57, 0x71, 0x6c, 0xb3, 0xbb, 0x0e, 0xe2, 0xc4, 0xcf, 0xe0, 0x67, 0xf0, 0x17, 0x91,
	0xf7, 0xc3, 0xd8, 0x96, 0x1d, 0xa2, 0xe6, 0xb6, 0x6f, 0x67, 0xe7, 0xcd, 0x1b, 0xcf, 0x1b, 0xc3,
	0x29, 0xc9, 0x64, 0x98, 0x2e, 0x2f, 0x52, 0x9e, 0xc8, 0x04, 0x75, 0x35, 0xc2, 0x53, 0x70, 0x6f,
	0x93, 0x35, 0x8d, 0xd1, 0x10, 0x5c, 0x99, 0x1f, 0x26, 0x9d, 0x59, 0x67, 0x7e, 0xb2, 0xd0, 0x00,
	0xbf, 0x87, 0xd3, 0x0f, 0xc9, 0x8a, 0xc5, 0x0b, 0xfa, 0x3d, 0xa3, 0x42, 0x22, 0x0f, 0x7a, 0x99,
	0xa0, 0x3c, 0x26, 0x1b, 0x6a, 0x1e, 0x16, 0x38, 0x8f, 0xa5, 0x44, 0x88, 0x1f, 0x09, 0xff, 0x3a,
	0x39, 0xd2, 0x31, 0x8b, 0x71, 0x08, 0x03, 0xc3, 0x23, 0xd2, 0x24, 0x16, 0x14, 0x4d, 0xe0, 0xbe,
	0xc8, 0x82, 0x80, 0x0a, 0xa1, 0x78, 0x7a, 0x0b, 0x0b, 0xf3, 0xc8, 0x86, 0x0a, 0x41, 0x56, 0xd4,
	0xb0, 0x58, 0x88, 0x9e, 0x59, 0x89, 0xce, 0xac, 0x33, 0xef, 0xfb, 0x83, 0x0b, 0xd3, 0x91, 0x6a,
	0xc0, 0x2a, 0xf6, 0x61, 0xf8, 0x2e, 0xa4, 0xc1, 0xfa, 0x93, 0x91, 0xb5, 0x87, 0x72, 0xfc, 0x0b,
	0x46, 0xb5, 0x9c, 0x03, 0x54, 0x96, 0x0b, 0x39, 0xb5, 0x4f, 0x34, 0x86, 0x2e, 0xd9, 0x12, 0x49,
	0xf8, 0xe4, 0x58, 0x45, 0x0c, 0xc2, 0x6f, 0x60, 0x56, 0x11, 0x70, 0xb5, 0x25, 0x2c, 0x22, 0x4b,
	0x16, 0x31, 0xf9, 0x73, 0x9f, 0x06, 0x3e, 0xc3, 0xd3, 0x1d, 0xf9, 0x77, 0x6f, 0x06, 0xbf, 0x84,
	0xa9, 0x22, 0xbe, 0xde, 0x10, 0x16, 0x35, 0xa9, 0x1a, 0x82, 0x4b, 0xf3, 0x98, 0xb5, 0x8d, 0x02,
	0xf8, 0x16, 0x9e, 0xb4, 0xa5, 0x1d, 0x20, 0xe6, 0x77, 0x07, 0x06, 0x37, 0x6c, 0x15, 0x67, 0xe9,
	0xce, 0xea, 0x95, 0x2f, 0x75, 0x54, 0x9b, 0xc0, 0x19, 0x9c, 0x7c, 0x63, 0x5c, 0xc8, 0xd2, 0x78,
	0xfe, 0x5d, 0xe4, 0x99, 0x11, 0x31, 0x41, 0x3d, 0xa1, 0x02, 0x57, 0xec, 0xed, 0xd6, 0xec, 0x7d,
	0x09, 0x7d, 0x2d, 0xec, 0x9a, 0xf3, 0x84, 0x23, 0x04, 0xc7, 0xa5, 0x31, 0xa9, 0x33, 0x7a, 0x08,
	0x0e, 0xe5, 0xdc, 0xe8, 0xc9, 0x8f, 0x78, 0x0d, 0x0f, 0x6c, 0x37, 0x07, 0xd8, 0xed, 0x5c, 0xf3,
	0x3a, 0x33, 0x67, 0xde, 0xf7, 0x1f, 0xd9, 0x95, 0x28, 0xa9, 0x51, 0xc5, 0xfc, 0x3f, 0x0e, 0xf4,
	0xaf, 0x32, 0x19, 0xde, 0x50, 0xbe, 0x65, 0x01, 0x45, 0xaf, 0xc0, 0x55, 0x0b, 0x89, 0x86, 0x36,
	0xa5, 0xbc, 0xe7, 0xde, 0xa8, 0x76, 0xab, 0x05, 0xe2, 0x7b, 0xe8, 0x23, 0x0c, 0x2a, 0x4e, 0x43,
	0x67, 0xf6, 0x65, 0xd3, 0xd6, 0x79, 0xd3, 0x96, 0x68, 0xc1, 0xc7, 0xe1, 0x71, 0xab, 0x73, 0xd1,
	0xbc, 0x31, 0xbb, 0xc1, 0x86, 0xde, 0x8b, 0x3d, 0x5e, 0x16, 0x35, 0x19, 0x8c, 0x9b, 0xdd, 0x89,
	0xce, 0x2b, 0x34, 0x6d, 0xa6, 0xf7, 0x9e, 0xff, 0xef, 0x59, 0x51, 0xea, 0x35, 0x74, 0xf5, 0x28,
	0xd0, 0xa8, 0x3a, 0x1a, 0x4b, 0x35, 0xae, 0x5f, 0xdb, 0xd4, 0xb7, 0xbd, 0x2f, 0xe6, 0x1f, 0xbd,
	0xec, 0xaa, 0x5f, 0xf6, 0xe5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x69, 0x1e, 0x86, 0xf0, 0xc2,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	//Unary
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	CheckUsername(ctx context.Context, in *CheckUsernameRequest, opts ...grpc.CallOption) (*CheckUsernameResponse, error)
	CheckUsernameAvailability(ctx context.Context, in *CheckUsernameAvailabilityRequest, opts ...grpc.CallOption) (*CheckUsernameAvailabilityResponse, error)
	CheckEmailAvailability(ctx context.Context, in *CheckEmailAvailabilityRequest, opts ...grpc.CallOption) (*CheckEmailAvailabilityResponse, error)
	Signup(ctx context.Context, in *SignupRequest, opts ...grpc.CallOption) (*SignupResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) CheckUsername(ctx context.Context, in *CheckUsernameRequest, opts ...grpc.CallOption) (*CheckUsernameResponse, error) {
	out := new(CheckUsernameResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/CheckUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) CheckUsernameAvailability(ctx context.Context, in *CheckUsernameAvailabilityRequest, opts ...grpc.CallOption) (*CheckUsernameAvailabilityResponse, error) {
	out := new(CheckUsernameAvailabilityResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/CheckUsernameAvailability", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) CheckEmailAvailability(ctx context.Context, in *CheckEmailAvailabilityRequest, opts ...grpc.CallOption) (*CheckEmailAvailabilityResponse, error) {
	out := new(CheckEmailAvailabilityResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/CheckEmailAvailability", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Signup(ctx context.Context, in *SignupRequest, opts ...grpc.CallOption) (*SignupResponse, error) {
	out := new(SignupResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/Signup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	//Unary
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	CheckUsername(context.Context, *CheckUsernameRequest) (*CheckUsernameResponse, error)
	CheckUsernameAvailability(context.Context, *CheckUsernameAvailabilityRequest) (*CheckUsernameAvailabilityResponse, error)
	CheckEmailAvailability(context.Context, *CheckEmailAvailabilityRequest) (*CheckEmailAvailabilityResponse, error)
	Signup(context.Context, *SignupRequest) (*SignupResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthServiceServer) CheckUsername(ctx context.Context, req *CheckUsernameRequest) (*CheckUsernameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUsername not implemented")
}
func (*UnimplementedAuthServiceServer) CheckUsernameAvailability(ctx context.Context, req *CheckUsernameAvailabilityRequest) (*CheckUsernameAvailabilityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUsernameAvailability not implemented")
}
func (*UnimplementedAuthServiceServer) CheckEmailAvailability(ctx context.Context, req *CheckEmailAvailabilityRequest) (*CheckEmailAvailabilityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckEmailAvailability not implemented")
}
func (*UnimplementedAuthServiceServer) Signup(ctx context.Context, req *SignupRequest) (*SignupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Signup not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_CheckUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CheckUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/CheckUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CheckUsername(ctx, req.(*CheckUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_CheckUsernameAvailability_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUsernameAvailabilityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CheckUsernameAvailability(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/CheckUsernameAvailability",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CheckUsernameAvailability(ctx, req.(*CheckUsernameAvailabilityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_CheckEmailAvailability_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckEmailAvailabilityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CheckEmailAvailability(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/CheckEmailAvailability",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CheckEmailAvailability(ctx, req.(*CheckEmailAvailabilityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Signup(ctx, req.(*SignupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authpb.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AuthService_Login_Handler,
		},
		{
			MethodName: "CheckUsername",
			Handler:    _AuthService_CheckUsername_Handler,
		},
		{
			MethodName: "CheckUsernameAvailability",
			Handler:    _AuthService_CheckUsernameAvailability_Handler,
		},
		{
			MethodName: "CheckEmailAvailability",
			Handler:    _AuthService_CheckEmailAvailability_Handler,
		},
		{
			MethodName: "Signup",
			Handler:    _AuthService_Signup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authpb.proto",
}
