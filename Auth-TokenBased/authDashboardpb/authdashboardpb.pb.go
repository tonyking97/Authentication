// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authdashboardpb.proto

package authdashboardpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckTokenRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckTokenRequest) Reset()         { *m = CheckTokenRequest{} }
func (m *CheckTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CheckTokenRequest) ProtoMessage()    {}
func (*CheckTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2738454257fa90a, []int{0}
}

func (m *CheckTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckTokenRequest.Unmarshal(m, b)
}
func (m *CheckTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckTokenRequest.Marshal(b, m, deterministic)
}
func (m *CheckTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTokenRequest.Merge(m, src)
}
func (m *CheckTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CheckTokenRequest.Size(m)
}
func (m *CheckTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTokenRequest proto.InternalMessageInfo

type CheckTokenResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckTokenResponse) Reset()         { *m = CheckTokenResponse{} }
func (m *CheckTokenResponse) String() string { return proto.CompactTextString(m) }
func (*CheckTokenResponse) ProtoMessage()    {}
func (*CheckTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2738454257fa90a, []int{1}
}

func (m *CheckTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckTokenResponse.Unmarshal(m, b)
}
func (m *CheckTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckTokenResponse.Marshal(b, m, deterministic)
}
func (m *CheckTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTokenResponse.Merge(m, src)
}
func (m *CheckTokenResponse) XXX_Size() int {
	return xxx_messageInfo_CheckTokenResponse.Size(m)
}
func (m *CheckTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTokenResponse proto.InternalMessageInfo

func (m *CheckTokenResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CheckTokenResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckTokenRequest)(nil), "authdashboardpb.CheckTokenRequest")
	proto.RegisterType((*CheckTokenResponse)(nil), "authdashboardpb.CheckTokenResponse")
}

func init() { proto.RegisterFile("authdashboardpb.proto", fileDescriptor_d2738454257fa90a) }

var fileDescriptor_d2738454257fa90a = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0x2c, 0x2d, 0xc9,
	0x48, 0x49, 0x2c, 0xce, 0x48, 0xca, 0x4f, 0x2c, 0x4a, 0x29, 0x48, 0xd2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x47, 0x13, 0x56, 0x12, 0xe6, 0x12, 0x74, 0xce, 0x48, 0x4d, 0xce, 0x0e, 0xc9,
	0xcf, 0x4e, 0xcd, 0x0b, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0xf2, 0xe0, 0x12, 0x42, 0x16,
	0x2c, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x92, 0xe0, 0x62, 0x2f, 0x2e, 0x4d, 0x4e, 0x4e, 0x2d,
	0x2e, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x08, 0x82, 0x71, 0x41, 0x32, 0xb9, 0xa9, 0xc5, 0xc5,
	0x89, 0xe9, 0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x51, 0x3e, 0x97, 0x88,
	0x63, 0x69, 0x49, 0x86, 0x0b, 0xcc, 0xc6, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0xa1, 0x70,
	0x2e, 0x2e, 0x84, 0x0d, 0x42, 0x4a, 0x7a, 0xe8, 0xae, 0xc5, 0x70, 0x93, 0x94, 0x32, 0x5e, 0x35,
	0x10, 0x27, 0x2a, 0x31, 0x38, 0x09, 0x46, 0xa1, 0x7b, 0x31, 0x89, 0x0d, 0xec, 0x75, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x49, 0x60, 0xc1, 0x13, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthDashboardServiceClient is the client API for AuthDashboardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthDashboardServiceClient interface {
	CheckToken(ctx context.Context, in *CheckTokenRequest, opts ...grpc.CallOption) (*CheckTokenResponse, error)
}

type authDashboardServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthDashboardServiceClient(cc *grpc.ClientConn) AuthDashboardServiceClient {
	return &authDashboardServiceClient{cc}
}

func (c *authDashboardServiceClient) CheckToken(ctx context.Context, in *CheckTokenRequest, opts ...grpc.CallOption) (*CheckTokenResponse, error) {
	out := new(CheckTokenResponse)
	err := c.cc.Invoke(ctx, "/authdashboardpb.AuthDashboardService/CheckToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthDashboardServiceServer is the server API for AuthDashboardService service.
type AuthDashboardServiceServer interface {
	CheckToken(context.Context, *CheckTokenRequest) (*CheckTokenResponse, error)
}

// UnimplementedAuthDashboardServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthDashboardServiceServer struct {
}

func (*UnimplementedAuthDashboardServiceServer) CheckToken(ctx context.Context, req *CheckTokenRequest) (*CheckTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckToken not implemented")
}

func RegisterAuthDashboardServiceServer(s *grpc.Server, srv AuthDashboardServiceServer) {
	s.RegisterService(&_AuthDashboardService_serviceDesc, srv)
}

func _AuthDashboardService_CheckToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthDashboardServiceServer).CheckToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authdashboardpb.AuthDashboardService/CheckToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthDashboardServiceServer).CheckToken(ctx, req.(*CheckTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthDashboardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authdashboardpb.AuthDashboardService",
	HandlerType: (*AuthDashboardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckToken",
			Handler:    _AuthDashboardService_CheckToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authdashboardpb.proto",
}
