{"version":3,"sources":["assets/images/logo/ff_full.png","authpb/authpb_grpc_web_pb.js","grpcClient.js","components/username.js","components/password.js","components/signin.js","components/signup.js","Auth.js","index.js","authpb/authpb_pb.js"],"names":["module","exports","__webpack_require__","p","grpc","web","require","proto","authpb","AuthServiceClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","AuthServicePromiseClient","methodInfo_AuthService_Login","AbstractClientBase","MethodInfo","LoginResponse","request","serializeBinary","deserializeBinary","prototype","login","metadata","callback","rpcCall","unaryCall","methodInfo_AuthService_CheckUsername","CheckUsernameResponse","checkUsername","methodInfo_AuthService_CheckUsernameAvailability","CheckUsernameAvailabilityResponse","checkUsernameAvailability","methodInfo_AuthService_CheckEmailAvailability","CheckEmailAvailabilityResponse","checkEmailAvailability","methodInfo_AuthService_Signup","SignupResponse","signup","grpClient","CheckUsernameRequest","Username","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","username","context","errorText","handleUsername","bind","assertThisInitialized","handleNext","e","value","target","setState","_this2","preventDefault","setUsername","err","response","code","getSuccess","getUsername","handleAvatar","getAvatar","togglePassword","getMessage","react_default","a","createElement","className","classes","container","Typography_default","component","variant","method","onSubmit","TextField_default","id","label","type","name","margin","fullWidth","error","length","helperText","onChange","index_es","direction","justify","alignItems","Link_default","button","onClick","handleSignupToggle","Button_default","color","ArrowForward_default","rightIcon","React","Component","Context","Consumer","username_Username","Password","password","showPassword","handlePassword","handleSubmit","handleShowPassword","clearPasswordError","avatar","autoFocus","InputProps","endAdornment","InputAdornment_default","position","IconButton_default","aria-label","VisibilityOff_default","Visibility_default","ArrowBack_default","iconSmall","components_password","password_Password","LoginRequest","createContext","Signin","passwordToggle","ipDetails","axios","get","then","data","catch","console","log","toUpperCase","_this3","_this4","setPassword","alert","getToken","_this5","authContext","Provider","objectSpread","withStyles","theme","createStyles","textAlign","width","textField","marginLeft","spacing","unit","marginRight","cursor","leftIcon","fontSize","height","backgroundColor","deepPurple","CheckUsernameAvailabilityRequest","CheckEmailAvailabilityRequest","SignupRequest","Signup","email","firstname","lastname","confPassword","emailErrorText","firstnameErrorText","lastnameErrorText","usernameErrorText","passwordErrorText","confirmPasswordErrorText","checkusernametoggle","checkemailtoggle","handleEmail","handleFirstname","handleLastname","handleConfPassword","handleCreateAccount","checkEmail","setEmail","setFirstname","setLastname","window","location","reload","getErrList","i","getName","getErr","autoComplete","onBlur","Auth","signupToggle","main","CssBaseline_default","Paper_default","paper","elevation","form","src","logo","alt","signin","defineProperty","display","breakpoints","up","marginTop","flexDirection","padding","concat","borderRadius","palette","secondary","paddingLeft","paddingRight","ReactDOM","render","src_Auth","document","getElementById","jspb","goog","global","Function","exportSymbol","Token","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","SignupError","repeatedFields_","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","f","obj","token","getFieldWithDefault","undefined","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setToken","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","writeString","setProto3StringField","getPassword","success","readBool","setSuccess","setMessage","readMessage","writeBool","writeMessage","setProto3BooleanField","getWrapperField","setWrapperField","clearToken","hasToken","getField","setAvatar","getEmail","getFirstname","getLastname","setName","setErr","errList","toObjectList","addErr","writeRepeatedMessage","getRepeatedWrapperField","setErrList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearErrList","object","extend"],"mappings":"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","file":"static/js/main.a241331e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ff_full.2dd66352.png\";","/**\n * @fileoverview gRPC-Web generated client stub for authpb\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.authpb = require('./authpb_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.authpb.AuthServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.authpb.AuthServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.authpb.LoginRequest,\n *   !proto.authpb.LoginResponse>}\n */\nconst methodInfo_AuthService_Login = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.authpb.LoginResponse,\n  /** @param {!proto.authpb.LoginRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.authpb.LoginResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.authpb.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.authpb.LoginResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.authpb.LoginResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.authpb.AuthServiceClient.prototype.login =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/authpb.AuthService/Login',\n      request,\n      metadata || {},\n      methodInfo_AuthService_Login,\n      callback);\n};\n\n\n/**\n * @param {!proto.authpb.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.authpb.LoginResponse>}\n *     A native promise that resolves to the response\n */\nproto.authpb.AuthServicePromiseClient.prototype.login =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/authpb.AuthService/Login',\n      request,\n      metadata || {},\n      methodInfo_AuthService_Login);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.authpb.CheckUsernameRequest,\n *   !proto.authpb.CheckUsernameResponse>}\n */\nconst methodInfo_AuthService_CheckUsername = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.authpb.CheckUsernameResponse,\n  /** @param {!proto.authpb.CheckUsernameRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.authpb.CheckUsernameResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.authpb.CheckUsernameRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.authpb.CheckUsernameResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.authpb.CheckUsernameResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.authpb.AuthServiceClient.prototype.checkUsername =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/authpb.AuthService/CheckUsername',\n      request,\n      metadata || {},\n      methodInfo_AuthService_CheckUsername,\n      callback);\n};\n\n\n/**\n * @param {!proto.authpb.CheckUsernameRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.authpb.CheckUsernameResponse>}\n *     A native promise that resolves to the response\n */\nproto.authpb.AuthServicePromiseClient.prototype.checkUsername =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/authpb.AuthService/CheckUsername',\n      request,\n      metadata || {},\n      methodInfo_AuthService_CheckUsername);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.authpb.CheckUsernameAvailabilityRequest,\n *   !proto.authpb.CheckUsernameAvailabilityResponse>}\n */\nconst methodInfo_AuthService_CheckUsernameAvailability = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.authpb.CheckUsernameAvailabilityResponse,\n  /** @param {!proto.authpb.CheckUsernameAvailabilityRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.authpb.CheckUsernameAvailabilityResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.authpb.CheckUsernameAvailabilityRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.authpb.CheckUsernameAvailabilityResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.authpb.CheckUsernameAvailabilityResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.authpb.AuthServiceClient.prototype.checkUsernameAvailability =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/authpb.AuthService/CheckUsernameAvailability',\n      request,\n      metadata || {},\n      methodInfo_AuthService_CheckUsernameAvailability,\n      callback);\n};\n\n\n/**\n * @param {!proto.authpb.CheckUsernameAvailabilityRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.authpb.CheckUsernameAvailabilityResponse>}\n *     A native promise that resolves to the response\n */\nproto.authpb.AuthServicePromiseClient.prototype.checkUsernameAvailability =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/authpb.AuthService/CheckUsernameAvailability',\n      request,\n      metadata || {},\n      methodInfo_AuthService_CheckUsernameAvailability);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.authpb.CheckEmailAvailabilityRequest,\n *   !proto.authpb.CheckEmailAvailabilityResponse>}\n */\nconst methodInfo_AuthService_CheckEmailAvailability = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.authpb.CheckEmailAvailabilityResponse,\n  /** @param {!proto.authpb.CheckEmailAvailabilityRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.authpb.CheckEmailAvailabilityResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.authpb.CheckEmailAvailabilityRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.authpb.CheckEmailAvailabilityResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.authpb.CheckEmailAvailabilityResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.authpb.AuthServiceClient.prototype.checkEmailAvailability =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/authpb.AuthService/CheckEmailAvailability',\n      request,\n      metadata || {},\n      methodInfo_AuthService_CheckEmailAvailability,\n      callback);\n};\n\n\n/**\n * @param {!proto.authpb.CheckEmailAvailabilityRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.authpb.CheckEmailAvailabilityResponse>}\n *     A native promise that resolves to the response\n */\nproto.authpb.AuthServicePromiseClient.prototype.checkEmailAvailability =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/authpb.AuthService/CheckEmailAvailability',\n      request,\n      metadata || {},\n      methodInfo_AuthService_CheckEmailAvailability);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.authpb.SignupRequest,\n *   !proto.authpb.SignupResponse>}\n */\nconst methodInfo_AuthService_Signup = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.authpb.SignupResponse,\n  /** @param {!proto.authpb.SignupRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.authpb.SignupResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.authpb.SignupRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.authpb.SignupResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.authpb.SignupResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.authpb.AuthServiceClient.prototype.signup =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/authpb.AuthService/Signup',\n      request,\n      metadata || {},\n      methodInfo_AuthService_Signup,\n      callback);\n};\n\n\n/**\n * @param {!proto.authpb.SignupRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.authpb.SignupResponse>}\n *     A native promise that resolves to the response\n */\nproto.authpb.AuthServicePromiseClient.prototype.signup =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/authpb.AuthService/Signup',\n      request,\n      metadata || {},\n      methodInfo_AuthService_Signup);\n};\n\n\nmodule.exports = proto.authpb;\n\n","const {AuthServiceClient} = require('./authpb/authpb_grpc_web_pb');\n\nexport const grpClient = new AuthServiceClient(\"http://localhost:8081\",null,null);\n","import React from 'react';\nimport {Context} from \"./signin\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport Link from \"@material-ui/core/Link\";\nimport {Grid} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//Import gRPC Client\nimport {grpClient} from \"../grpcClient\";\nconst {CheckUsernameRequest} = require('../authpb/authpb_pb');\n\nclass Username extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            username:this.props.context.username,\n            errorText:\"\"\n        };\n\n        this.handleUsername = this.handleUsername.bind(this);\n        this.handleNext = this.handleNext.bind(this)\n    }\n\n    handleUsername(e){\n        var value = e.target.value;\n        this.setState({\n            username:value,\n            errorText:\"\"\n        },() => {\n\n        });\n    }\n\n    handleNext(e){\n\n        e.preventDefault();\n        if(this.state.username){\n\n            var request = new CheckUsernameRequest();\n            request.setUsername(this.state.username);\n            grpClient.checkUsername(request,{},(err, response) => {\n\n                if(err){\n\n                    if(err.code === 14){\n                        this.setState({\n                            errorText:\"Service Unavailable. Please try again Later.\"\n                        });\n                    }\n                    else {\n                        this.setState({\n                            errorText:\"Error Occurred. Please try again Later.\"\n                        });\n                    }\n                }\n                else {\n                    if(response.getSuccess()){\n                                this.props.context.handleUsername(response.getUsername());\n                                this.props.context.handleAvatar(response.getAvatar());\n                                this.props.context.togglePassword();\n                    }\n                    else {\n                                this.setState({\n                                    errorText:response.getMessage()\n                                });\n                    }\n                }\n\n            });\n        }\n        else{\n            this.setState({\n                errorText:\"Username is required\"\n            });\n        }\n    }\n\n    render() {\n        return(\n            <div className={this.props.context.classes.container}>\n                <Typography component=\"h1\" variant=\"h6\">\n                        Sign in\n                </Typography>\n\n                <Typography component=\"h6\" variant=\"subtitle1\">\n                    using FogFind Account\n                </Typography>\n\n                <form method=\"post\" onSubmit={this.handleNext}>\n                    <TextField\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"text\"\n                        name=\"username\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error ={this.state.errorText.length === 0 ? false : true }\n                        helperText={this.state.errorText}\n                        value={this.state.username}\n                        onChange={this.handleUsername}\n                    />\n                </form>\n\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"center\">\n\n                    <Link\n                        className={this.props.context.classes.button}\n                        onClick={this.props.context.handleSignupToggle}>\n                        Create account\n                    </Link>\n\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={this.props.context.classes.button}\n                        onClick={this.handleNext}>\n                        Next\n                        <ArrowForwardIcon className={this.props.context.classes.rightIcon} />\n                    </Button>\n\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default props => (\n    <Context.Consumer>\n        {state => <Username context={state} />}\n    </Context.Consumer>\n)\n","import React from 'react';\nimport {Context} from \"./signin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Avatar, Grid} from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\"\nimport Button from \"@material-ui/core/Button\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nclass Password extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            password:this.props.context.password,\n            showPassword:false\n        };\n        this.handlePassword = this.handlePassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleShowPassword = this.handleShowPassword.bind(this);\n    }\n\n    handlePassword(e){\n        var value = e.target.value;\n        this.setState({\n            password:value\n        },() => {\n            this.props.context.clearPasswordError();\n        });\n    }\n\n    handleShowPassword(){\n        this.setState({\n            showPassword:!this.state.showPassword\n        });\n    }\n\n    async handleSubmit(e){\n            e.preventDefault();\n            await (this.props.context.handlePassword(this.state.password));\n            this.props.context.handleSubmit();\n    }\n\n    render(){\n        return(\n            <div className={this.props.context.classes.container}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-evenly\"\n                    alignItems=\"center\"\n                >\n                    <Avatar className={this.props.context.classes.avatar} >{this.props.context.avatar}</Avatar>\n                    <Typography component=\"h2\" variant=\"h6\">\n                        Welcome {this.props.context.username}\n                    </Typography>\n                </Grid>\n                <form method=\"post\" onSubmit={this.handleSubmit}>\n                <TextField\n                    id=\"password\"\n                    label=\"Password\"\n                    type={this.state.showPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    autoFocus\n                    fullWidth\n                    error ={this.props.context.errorText.length === 0 ? false : true }\n                    helperText={this.props.context.errorText}\n                    value={this.state.password}\n                    onChange={this.handlePassword}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Toggle password visibility\"\n                                    onClick={this.handleShowPassword}\n                                >\n                                    {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                </IconButton>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                </form>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"center\">\n\n                    <Link\n                        className={this.props.context.classes.button}\n                        onClick={this.props.context.togglePassword}>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"space-between\"\n                            alignItems=\"center\">\n                        <ArrowBackIcon className={this.props.context.classes.iconSmall}/>\n                        Back\n                        </Grid>\n                    </Link>\n\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={this.props.context.classes.button}\n                        onClick={this.handleSubmit}>\n                        Submit\n                    </Button>\n\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\nexport default props => (\n    <Context.Consumer>\n        {state => <Password context={state}/>}\n    </Context.Consumer>\n)\n","import React from 'react';\nimport axios from 'axios';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport {authContext} from \"../Auth\";\nimport Username from \"./username\";\nimport Password from \"./password\"\nimport {deepPurple} from \"@material-ui/core/colors\";\n\n//Import gRPC Client\nimport {grpClient} from \"../grpcClient\";\nconst {LoginRequest} = require('../authpb/authpb_pb');\n\nexport const Context = React.createContext({});\n\nconst styles = theme => createStyles({\n    container: {\n        textAlign: 'center',\n        width: '100%',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n        cursor: 'pointer',\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n    avatar: {\n        margin: 10,\n        width: 90,\n        height: 90,\n        color:'#fff',\n        backgroundColor: deepPurple[500],\n        fontSize: '35px',\n    },\n});\n\nclass Signin extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            passwordToggle:false,\n            ipDetails: \"\",\n            avatar: \"FF\",\n            errorText:\"\"\n        };\n        this.handleUsername = this.handleUsername.bind(this);\n        this.handlePassword = this.handlePassword.bind(this);\n        this.clearPasswordError = this.clearPasswordError.bind(this);\n        this.togglePassword = this.togglePassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleAvatar = this.handleAvatar.bind(this);\n\n        axios.get(\"http://api.ipstack.com/check?access_key=5990a130f9d59f70be57812db0174f65\")\n            .then(response => {\n                this.setState({\n                    ipDetails:response.data\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            });\n    }\n\n    handleUsername(value){\n        this.setState({\n            username:value\n        },() => {\n            console.log(\"username change -> \"+this.state.username);\n        });\n    }\n\n    handleAvatar(value){\n        this.setState({\n            avatar:value.toUpperCase()\n        });\n    }\n\n    togglePassword(){\n        this.setState({\n            passwordToggle: !this.state.passwordToggle\n        });\n    }\n\n    handlePassword(value){\n        this.setState({\n            password:value\n        },() => {\n            console.log(\"Password change -> \"+this.state.password);\n        })\n    }\n\n    clearPasswordError(){\n        if(this.state.errorText !== \"\"){\n            this.setState({\n                errorText:\"\"\n            });\n        }\n    }\n\n    handleSubmit(){\n        if(this.state.password){\n\n            var request = new LoginRequest();\n            request.setUsername(this.state.username);\n            request.setPassword(this.state.password);\n\n            grpClient.login(request, {}, (err, response) => {\n\n                if(err){\n                    if(err.code === 14){\n                        this.setState({\n                            errorText:\"Service Unavailable. Please try again Later.\"\n                        });\n                    }\n                    else {\n                        this.setState({\n                            errorText:\"Error Occurred. Please try again Later.\"\n                        });\n                    }\n                }\n                else {\n                    if(response.getSuccess()){\n                        alert(\"Token Generated :\\n\"+response.getToken())\n                    }\n                    else {\n                        this.setState({\n                            errorText:response.getMessage()\n                        });\n                    }\n                }\n            });\n\n        }\n        else{\n            this.setState({\n                errorText:\"Password is required\"\n            });\n        }\n    }\n\n    render() {\n        return(\n            <authContext.Consumer>\n                {handleSignupToggle => {\n                    return (\n                        <Context.Provider value={{...this.state,\n                            handleUsername:this.handleUsername,\n                            handlePassword:this.handlePassword,\n                            handleSubmit:this.handleSubmit,\n                            togglePassword:this.togglePassword,\n                            clearPasswordError:this.clearPasswordError,\n                            handleSignupToggle:handleSignupToggle,\n                            handleAvatar:this.handleAvatar,\n                            classes:this.props.classes\n                        }}>\n                            <div>\n                                {!this.state.passwordToggle && <Username />}\n                                {this.state.passwordToggle && <Password/>}\n                            </div>\n                        </Context.Provider>\n                    )\n                }}\n            </authContext.Consumer>\n        )\n    }\n}\n\nexport default withStyles(styles)(Signin)","import React from 'react';\nimport {authContext} from \"../Auth\";\nimport {Grid} from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\n\n//Import gRPC Client\nimport {grpClient} from \"../grpcClient\";\nconst {CheckUsernameAvailabilityRequest, CheckEmailAvailabilityRequest, SignupRequest} = require('../authpb/authpb_pb');\n\nconst styles = theme => createStyles({\n    container: {\n        textAlign: 'center',\n        width: '100%',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n        cursor: 'pointer',\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});\n\nclass Signup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email:\"\",\n            firstname:\"\",\n            lastname:\"\",\n            username:\"\",\n            password:\"\",\n            confPassword:\"\",\n            emailErrorText:\"\",\n            firstnameErrorText:\"\",\n            lastnameErrorText:\"\",\n            usernameErrorText:\"\",\n            passwordErrorText:\"\",\n            confirmPasswordErrorText:\"\",\n            checkusernametoggle:true,\n            checkemailtoggle:true\n        }\n\n        this.handleEmail = this.handleEmail.bind(this)\n        this.handleFirstname = this.handleFirstname.bind(this)\n        this.handleLastname = this.handleLastname.bind(this)\n        this.handleUsername = this.handleUsername.bind(this)\n        this.handlePassword = this.handlePassword.bind(this)\n        this.handleConfPassword = this.handleConfPassword.bind(this)\n        this.handleCreateAccount = this.handleCreateAccount.bind(this)\n        this.checkUsername = this.checkUsername.bind(this)\n        this.checkEmail = this.checkEmail.bind(this)\n    }\n\n    handleEmail(e){\n        var value = e.target.value;\n        this.setState({\n            email:value,\n            emailErrorText:\"\",\n        });\n    }\n\n    handleFirstname(e){\n        var value = e.target.value;\n        this.setState({\n            firstname:value,\n            firstnameErrorText:\"\",\n        });\n    }\n\n    handleLastname(e){\n        var value = e.target.value;\n        this.setState({\n            lastname:value,\n            lastnameErrorText:\"\",\n        });\n    }\n\n    handleUsername(e){\n        var value = e.target.value;\n        this.setState({\n            username:value,\n            usernameErrorText:\"\",\n        });\n    }\n\n    handlePassword(e){\n        var value = e.target.value;\n        this.setState({\n            password:value,\n            passwordErrorText:\"\",\n        });\n    }\n\n    handleConfPassword(e){\n        var value = e.target.value;\n        this.setState({\n            confPassword:value,\n            confirmPasswordErrorText:\"\",\n        });\n    }\n\n    checkUsername(){\n        if(this.state.username !== \"\"){\n\n            var request = new CheckUsernameAvailabilityRequest();\n            request.setUsername(this.state.username);\n\n            grpClient.checkUsernameAvailability(request,{},(err, response) => {\n\n                if(err){\n\n                    if(err.code === 14){\n                        this.setState({\n                            usernameErrorText:\"Service Unavailable. Please try again Later.\"\n                        });\n                    }\n                    else {\n                        this.setState({\n                            usernameErrorText:\"Error Occurred. Please try again Later.\"\n                        });\n                    }\n                }\n                else {\n                    if(response.getSuccess()){\n                        this.setState({\n                            checkusernametoggle:false,\n                            usernameErrorText:response.getMessage()\n                        });\n                    }\n                    else {\n                        this.setState({\n                            checkusernametoggle:true,\n                            usernameErrorText:response.getMessage()\n                        });\n                    }\n                }\n\n            });\n        }\n    }\n\n    checkEmail(){\n        if(this.state.email !== \"\"){\n\n            var request = new CheckEmailAvailabilityRequest();\n            request.setEmail(this.state.email);\n\n            grpClient.checkEmailAvailability(request,{},(err, response) => {\n\n                if(err){\n\n                    if(err.code === 14){\n                        this.setState({\n                            emailErrorText:\"Service Unavailable. Please try again Later.\"\n                        });\n                    }\n                    else {\n                        this.setState({\n                            emailErrorText:\"Error Occurred. Please try again Later.\"\n                        });\n                    }\n                }\n                else {\n                    if(response.getSuccess()){\n                        this.setState({\n                            checkemailtoggle:false,\n                            emailErrorText:response.getMessage()\n                        });\n                    }\n                    else {\n                        this.setState({\n                            checkemailtoggle:true,\n                            emailErrorText:response.getMessage()\n                        });\n                    }\n                }\n\n            });\n        }\n    }\n\n    handleCreateAccount(){\n\n        if(this.state.password === this.state.confPassword){\n\n            var request = new SignupRequest();\n            request.setEmail(this.state.email);\n            request.setUsername(this.state.username);\n            request.setFirstname(this.state.firstname);\n            request.setLastname(this.state.lastname);\n            request.setPassword(this.state.password);\n\n            grpClient.signup(request,{},(err, response) => {\n\n                if(err){\n\n                    if(err.code === 14){\n                        alert(\"Service Unavailable. Please try again Later.\");\n                    }\n                    else {\n                        alert(\"Error Occurred. Please try again Later.\");\n                    }\n                }\n                else {\n                    if(response.getSuccess()){\n                        alert(response.getMessage());\n                        window.location.reload();\n                    }\n                    else {\n                        if(response.getErrList()){\n                            for(var i=0; i<response.getErrList().length; i++){\n\n                                    switch (response.getErrList()[i].getName()) {\n                                        case \"email\":\n                                            this.setState({\n                                                checkemailtoggle:true,\n                                                emailErrorText:response.getErrList()[i].getErr()\n                                            });\n                                            break;\n                                        case \"firstname\":\n                                            this.setState({\n                                                firstnameErrorText:response.getErrList()[i].getErr()\n                                            });\n                                            break;\n                                        case \"lastname\":\n                                            this.setState({\n                                                lastnameErrorText:response.getErrList()[i].getErr()\n                                            });\n                                            break;\n                                        case \"username\":\n                                            this.setState({\n                                                checkusernametoggle:true,\n                                                usernameErrorText:response.getErrList()[i].getErr()\n                                            });\n                                            break;\n                                        case \"password\":\n                                            this.setState({\n                                                passwordErrorText:response.getErrList()[i].getErr(),\n                                                confirmPasswordErrorText:\"Confirm \"+response.getErrList()[i].getErr()\n                                            });\n                                            break;\n                                        default:\n                                            break;\n                                    }\n                            }\n                        }\n                        else {\n                            alert(response.getMessage());\n                        }\n                    }\n                }\n\n            });\n        }\n        else{\n            if(this.state.confPassword === \"\"){\n                this.setState({\n                    confirmPasswordErrorText:\"Confirm your password\"\n                });\n            } else {\n                this.setState({\n                    confirmPasswordErrorText:\"Confirm password not matching\"\n                });\n            }\n        }\n\n    }\n\n    render() {\n        return (\n            <authContext.Consumer>\n                {handleSignupToggle => {\n                    return (\n                        <div className={this.props.classes.container}>\n                            <Typography component=\"h1\" variant=\"h6\">\n                                Create your FogFind Account\n                            </Typography>\n\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"space-evenly\"\n                                alignItems=\"center\"\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"space-between\"\n                                    alignItems=\"center\">\n\n                                    <TextField\n                                        id=\"firstname\"\n                                        label=\"Firstname\"\n                                        type=\"text\"\n                                        name=\"firstname\"\n                                        autoComplete=\"off\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        error ={this.state.firstnameErrorText.length === 0 ? false : true }\n                                        helperText={this.state.firstnameErrorText}\n                                        value={this.state.firstname}\n                                        onChange={this.handleFirstname}\n                                    />\n                                    <TextField\n                                        id=\"lastname\"\n                                        label=\"Lastname\"\n                                        type=\"text\"\n                                        name=\"lastname\"\n                                        autoComplete=\"off\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        error ={this.state.lastnameErrorText.length === 0 ? false : true }\n                                        helperText={this.state.lastnameErrorText}\n                                        value={this.state.lastname}\n                                        onChange={this.handleLastname}\n                                    />\n\n                                </Grid>\n\n                                <TextField\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    type=\"text\"\n                                    name=\"username\"\n                                    autoComplete=\"off\"\n                                    margin=\"dense\"\n                                    variant=\"outlined\"\n                                    error ={(!this.state.checkusernametoggle || this.state.usernameErrorText.length === 0) ? false : true }\n                                    helperText={this.state.usernameErrorText}\n                                    value={this.state.username}\n                                    fullWidth\n                                    onBlur={this.checkUsername}\n                                    onChange={this.handleUsername}\n                                />\n\n                                <TextField\n                                    id=\"email\"\n                                    label=\"Email\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    autoComplete=\"off\"\n                                    margin=\"dense\"\n                                    variant=\"outlined\"\n                                    error ={(!this.state.checkemailtoggle || this.state.emailErrorText.length === 0) ? false : true }\n                                    helperText={this.state.emailErrorText}\n                                    value={this.state.email}\n                                    fullWidth\n                                    onBlur={this.checkEmail}\n                                    onChange={this.handleEmail}\n                                />\n\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"space-between\"\n                                    alignItems=\"center\">\n\n                                    <TextField\n                                        id=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        autoComplete=\"off\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        error ={this.state.passwordErrorText.length === 0 ? false : true }\n                                        helperText={this.state.passwordErrorText}\n                                        value={this.state.password}\n                                        onChange={this.handlePassword}\n                                    />\n\n                                    <TextField\n                                        id=\"confpassword\"\n                                        label=\"Confirm\"\n                                        type=\"password\"\n                                        name=\"confpassword\"\n                                        autoComplete=\"off\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        error ={this.state.confirmPasswordErrorText.length === 0 ? false : true }\n                                        helperText={this.state.confirmPasswordErrorText}\n                                        value={this.state.confPassword}\n                                        onChange={this.handleConfPassword}\n                                    />\n\n                                </Grid>\n\n                            </Grid>\n\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"space-between\"\n                                alignItems=\"center\">\n                                <Link\n                                    className={this.props.classes.button}\n                                    onClick={handleSignupToggle}>\n                                    Have account?\n                                </Link>\n\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    className={this.props.classes.button}\n                                    onClick={this.handleCreateAccount}>\n                                    Create Account\n                                </Button>\n                            </Grid>\n\n                        </div>\n                    )\n                }}\n            </authContext.Consumer>\n        );\n    }\n}\n\nexport default withStyles(styles)(Signup);","import React from 'react';\nimport Signin from './components/signin';\nimport Signup from \"./components/signup\";\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport logo from \"./assets/images/logo/ff_full.png\";\nimport './logo.css'\n\nexport const authContext = React.createContext({});\n\nconst styles = theme => createStyles({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 450,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 16,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 1}px ${theme.spacing.unit * 3}px`,\n    borderRadius: 7,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 2,\n    paddingRight: theme.spacing.unit * 2,\n  },\n});\n\nclass Auth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      signupToggle:false\n    }\n    this.handleSignupToggle = this.handleSignupToggle.bind(this)\n  }\n\n  handleSignupToggle(){\n    this.setState({\n      signupToggle: !this.state.signupToggle\n    });\n  }\n\n  render() {\n    return (\n        <authContext.Provider value={this.handleSignupToggle}>\n          <main className={this.props.classes.main}>\n            <CssBaseline />\n\n            <Paper className={this.props.classes.paper} elevation={20} >\n              <div className={this.props.classes.form}>\n                <div className=\"sso-logo-placeholder\">\n                  <img src={logo} className=\"sso-logo-align\" alt=\"logo\" />\n                </div>\n                {!this.state.signupToggle && <Signin />}\n                {this.state.signupToggle && <Signup />}\n              </div>\n            </Paper>\n\n          </main>\n        </authContext.Provider>\n    );\n  }\n}\n\nexport default withStyles(styles)(Auth);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Auth from './Auth';\n\nReactDOM.render(<Auth />, document.getElementById('root'));\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.authpb.CheckEmailAvailabilityRequest', null, global);\ngoog.exportSymbol('proto.authpb.CheckEmailAvailabilityResponse', null, global);\ngoog.exportSymbol('proto.authpb.CheckUsernameAvailabilityRequest', null, global);\ngoog.exportSymbol('proto.authpb.CheckUsernameAvailabilityResponse', null, global);\ngoog.exportSymbol('proto.authpb.CheckUsernameRequest', null, global);\ngoog.exportSymbol('proto.authpb.CheckUsernameResponse', null, global);\ngoog.exportSymbol('proto.authpb.LoginRequest', null, global);\ngoog.exportSymbol('proto.authpb.LoginResponse', null, global);\ngoog.exportSymbol('proto.authpb.SignupError', null, global);\ngoog.exportSymbol('proto.authpb.SignupRequest', null, global);\ngoog.exportSymbol('proto.authpb.SignupResponse', null, global);\ngoog.exportSymbol('proto.authpb.Token', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.Token = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.Token, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.Token.displayName = 'proto.authpb.Token';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.LoginRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.LoginRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.LoginRequest.displayName = 'proto.authpb.LoginRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.LoginResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.LoginResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.LoginResponse.displayName = 'proto.authpb.LoginResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.CheckUsernameRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.CheckUsernameRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.CheckUsernameRequest.displayName = 'proto.authpb.CheckUsernameRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.CheckUsernameResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.CheckUsernameResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.CheckUsernameResponse.displayName = 'proto.authpb.CheckUsernameResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.CheckUsernameAvailabilityRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.CheckUsernameAvailabilityRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.CheckUsernameAvailabilityRequest.displayName = 'proto.authpb.CheckUsernameAvailabilityRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.CheckUsernameAvailabilityResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.CheckUsernameAvailabilityResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.CheckUsernameAvailabilityResponse.displayName = 'proto.authpb.CheckUsernameAvailabilityResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.CheckEmailAvailabilityRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.CheckEmailAvailabilityRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.CheckEmailAvailabilityRequest.displayName = 'proto.authpb.CheckEmailAvailabilityRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.CheckEmailAvailabilityResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.CheckEmailAvailabilityResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.CheckEmailAvailabilityResponse.displayName = 'proto.authpb.CheckEmailAvailabilityResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.SignupRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.SignupRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.SignupRequest.displayName = 'proto.authpb.SignupRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.SignupError = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.authpb.SignupError, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.SignupError.displayName = 'proto.authpb.SignupError';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.authpb.SignupResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.authpb.SignupResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.authpb.SignupResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.authpb.SignupResponse.displayName = 'proto.authpb.SignupResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.Token.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.Token.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.Token} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.Token.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    token: (f = jspb.Message.getFieldWithDefault(msg, 1, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.Token}\n */\nproto.authpb.Token.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.Token;\n  return proto.authpb.Token.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.Token} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.Token}\n */\nproto.authpb.Token.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.Token.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.Token.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.Token} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.Token.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string token = 1;\n * @return {string}\n */\nproto.authpb.Token.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.Token.prototype.setToken = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.LoginRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.LoginRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.LoginRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.LoginRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: (f = jspb.Message.getFieldWithDefault(msg, 1, \"\")) == null ? undefined : f,\n    password: (f = jspb.Message.getFieldWithDefault(msg, 2, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.LoginRequest}\n */\nproto.authpb.LoginRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.LoginRequest;\n  return proto.authpb.LoginRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.LoginRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.LoginRequest}\n */\nproto.authpb.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.LoginRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.LoginRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.LoginRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.LoginRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.authpb.LoginRequest.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.LoginRequest.prototype.setUsername = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.authpb.LoginRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.LoginRequest.prototype.setPassword = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.LoginResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.LoginResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.LoginResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.LoginResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,\n    message: (f = jspb.Message.getFieldWithDefault(msg, 2, \"\")) == null ? undefined : f,\n    token: (f = msg.getToken()) && proto.authpb.Token.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.LoginResponse}\n */\nproto.authpb.LoginResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.LoginResponse;\n  return proto.authpb.LoginResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.LoginResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.LoginResponse}\n */\nproto.authpb.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.authpb.Token;\n      reader.readMessage(value,proto.authpb.Token.deserializeBinaryFromReader);\n      msg.setToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.LoginResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.LoginResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.LoginResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.LoginResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getToken();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.authpb.Token.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool success = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.authpb.LoginResponse.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.authpb.LoginResponse.prototype.setSuccess = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.authpb.LoginResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.LoginResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Token token = 3;\n * @return {?proto.authpb.Token}\n */\nproto.authpb.LoginResponse.prototype.getToken = function() {\n  return /** @type{?proto.authpb.Token} */ (\n    jspb.Message.getWrapperField(this, proto.authpb.Token, 3));\n};\n\n\n/** @param {?proto.authpb.Token|undefined} value */\nproto.authpb.LoginResponse.prototype.setToken = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n */\nproto.authpb.LoginResponse.prototype.clearToken = function() {\n  this.setToken(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.authpb.LoginResponse.prototype.hasToken = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.CheckUsernameRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.CheckUsernameRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.CheckUsernameRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckUsernameRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: (f = jspb.Message.getFieldWithDefault(msg, 1, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.CheckUsernameRequest}\n */\nproto.authpb.CheckUsernameRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.CheckUsernameRequest;\n  return proto.authpb.CheckUsernameRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.CheckUsernameRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.CheckUsernameRequest}\n */\nproto.authpb.CheckUsernameRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.CheckUsernameRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.CheckUsernameRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.CheckUsernameRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckUsernameRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.authpb.CheckUsernameRequest.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.CheckUsernameRequest.prototype.setUsername = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.CheckUsernameResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.CheckUsernameResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.CheckUsernameResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckUsernameResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,\n    message: (f = jspb.Message.getFieldWithDefault(msg, 2, \"\")) == null ? undefined : f,\n    username: (f = jspb.Message.getFieldWithDefault(msg, 3, \"\")) == null ? undefined : f,\n    avatar: (f = jspb.Message.getFieldWithDefault(msg, 4, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.CheckUsernameResponse}\n */\nproto.authpb.CheckUsernameResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.CheckUsernameResponse;\n  return proto.authpb.CheckUsernameResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.CheckUsernameResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.CheckUsernameResponse}\n */\nproto.authpb.CheckUsernameResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.CheckUsernameResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.CheckUsernameResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.CheckUsernameResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckUsernameResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool success = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.authpb.CheckUsernameResponse.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.authpb.CheckUsernameResponse.prototype.setSuccess = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.authpb.CheckUsernameResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.CheckUsernameResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.authpb.CheckUsernameResponse.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.CheckUsernameResponse.prototype.setUsername = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string avatar = 4;\n * @return {string}\n */\nproto.authpb.CheckUsernameResponse.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.CheckUsernameResponse.prototype.setAvatar = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.CheckUsernameAvailabilityRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.CheckUsernameAvailabilityRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.CheckUsernameAvailabilityRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckUsernameAvailabilityRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: (f = jspb.Message.getFieldWithDefault(msg, 1, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.CheckUsernameAvailabilityRequest}\n */\nproto.authpb.CheckUsernameAvailabilityRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.CheckUsernameAvailabilityRequest;\n  return proto.authpb.CheckUsernameAvailabilityRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.CheckUsernameAvailabilityRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.CheckUsernameAvailabilityRequest}\n */\nproto.authpb.CheckUsernameAvailabilityRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.CheckUsernameAvailabilityRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.CheckUsernameAvailabilityRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.CheckUsernameAvailabilityRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckUsernameAvailabilityRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.authpb.CheckUsernameAvailabilityRequest.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.CheckUsernameAvailabilityRequest.prototype.setUsername = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.CheckUsernameAvailabilityResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.CheckUsernameAvailabilityResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.CheckUsernameAvailabilityResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckUsernameAvailabilityResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,\n    message: (f = jspb.Message.getFieldWithDefault(msg, 2, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.CheckUsernameAvailabilityResponse}\n */\nproto.authpb.CheckUsernameAvailabilityResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.CheckUsernameAvailabilityResponse;\n  return proto.authpb.CheckUsernameAvailabilityResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.CheckUsernameAvailabilityResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.CheckUsernameAvailabilityResponse}\n */\nproto.authpb.CheckUsernameAvailabilityResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.CheckUsernameAvailabilityResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.CheckUsernameAvailabilityResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.CheckUsernameAvailabilityResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckUsernameAvailabilityResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool success = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.authpb.CheckUsernameAvailabilityResponse.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.authpb.CheckUsernameAvailabilityResponse.prototype.setSuccess = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.authpb.CheckUsernameAvailabilityResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.CheckUsernameAvailabilityResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.CheckEmailAvailabilityRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.CheckEmailAvailabilityRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.CheckEmailAvailabilityRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckEmailAvailabilityRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    email: (f = jspb.Message.getFieldWithDefault(msg, 1, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.CheckEmailAvailabilityRequest}\n */\nproto.authpb.CheckEmailAvailabilityRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.CheckEmailAvailabilityRequest;\n  return proto.authpb.CheckEmailAvailabilityRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.CheckEmailAvailabilityRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.CheckEmailAvailabilityRequest}\n */\nproto.authpb.CheckEmailAvailabilityRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.CheckEmailAvailabilityRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.CheckEmailAvailabilityRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.CheckEmailAvailabilityRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckEmailAvailabilityRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string email = 1;\n * @return {string}\n */\nproto.authpb.CheckEmailAvailabilityRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.CheckEmailAvailabilityRequest.prototype.setEmail = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.CheckEmailAvailabilityResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.CheckEmailAvailabilityResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.CheckEmailAvailabilityResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckEmailAvailabilityResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,\n    message: (f = jspb.Message.getFieldWithDefault(msg, 2, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.CheckEmailAvailabilityResponse}\n */\nproto.authpb.CheckEmailAvailabilityResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.CheckEmailAvailabilityResponse;\n  return proto.authpb.CheckEmailAvailabilityResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.CheckEmailAvailabilityResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.CheckEmailAvailabilityResponse}\n */\nproto.authpb.CheckEmailAvailabilityResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.CheckEmailAvailabilityResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.CheckEmailAvailabilityResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.CheckEmailAvailabilityResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.CheckEmailAvailabilityResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool success = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.authpb.CheckEmailAvailabilityResponse.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.authpb.CheckEmailAvailabilityResponse.prototype.setSuccess = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.authpb.CheckEmailAvailabilityResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.CheckEmailAvailabilityResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.SignupRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.SignupRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.SignupRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.SignupRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    email: (f = jspb.Message.getFieldWithDefault(msg, 1, \"\")) == null ? undefined : f,\n    username: (f = jspb.Message.getFieldWithDefault(msg, 2, \"\")) == null ? undefined : f,\n    firstname: (f = jspb.Message.getFieldWithDefault(msg, 3, \"\")) == null ? undefined : f,\n    lastname: (f = jspb.Message.getFieldWithDefault(msg, 4, \"\")) == null ? undefined : f,\n    password: (f = jspb.Message.getFieldWithDefault(msg, 5, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.SignupRequest}\n */\nproto.authpb.SignupRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.SignupRequest;\n  return proto.authpb.SignupRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.SignupRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.SignupRequest}\n */\nproto.authpb.SignupRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFirstname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLastname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.SignupRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.SignupRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.SignupRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.SignupRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getFirstname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getLastname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string email = 1;\n * @return {string}\n */\nproto.authpb.SignupRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.SignupRequest.prototype.setEmail = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string username = 2;\n * @return {string}\n */\nproto.authpb.SignupRequest.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.SignupRequest.prototype.setUsername = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string firstname = 3;\n * @return {string}\n */\nproto.authpb.SignupRequest.prototype.getFirstname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.SignupRequest.prototype.setFirstname = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string lastname = 4;\n * @return {string}\n */\nproto.authpb.SignupRequest.prototype.getLastname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.SignupRequest.prototype.setLastname = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string password = 5;\n * @return {string}\n */\nproto.authpb.SignupRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.SignupRequest.prototype.setPassword = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.SignupError.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.SignupError.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.SignupError} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.SignupError.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: (f = jspb.Message.getFieldWithDefault(msg, 1, \"\")) == null ? undefined : f,\n    err: (f = jspb.Message.getFieldWithDefault(msg, 2, \"\")) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.SignupError}\n */\nproto.authpb.SignupError.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.SignupError;\n  return proto.authpb.SignupError.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.SignupError} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.SignupError}\n */\nproto.authpb.SignupError.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setErr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.SignupError.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.SignupError.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.SignupError} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.SignupError.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getErr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.authpb.SignupError.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.SignupError.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string err = 2;\n * @return {string}\n */\nproto.authpb.SignupError.prototype.getErr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.SignupError.prototype.setErr = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.authpb.SignupResponse.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.authpb.SignupResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.authpb.SignupResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.authpb.SignupResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.SignupResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,\n    message: (f = jspb.Message.getFieldWithDefault(msg, 2, \"\")) == null ? undefined : f,\n    errList: jspb.Message.toObjectList(msg.getErrList(),\n    proto.authpb.SignupError.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.authpb.SignupResponse}\n */\nproto.authpb.SignupResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.authpb.SignupResponse;\n  return proto.authpb.SignupResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.authpb.SignupResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.authpb.SignupResponse}\n */\nproto.authpb.SignupResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.authpb.SignupError;\n      reader.readMessage(value,proto.authpb.SignupError.deserializeBinaryFromReader);\n      msg.addErr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.authpb.SignupResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.authpb.SignupResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.authpb.SignupResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.authpb.SignupResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getErrList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.authpb.SignupError.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool success = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.authpb.SignupResponse.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.authpb.SignupResponse.prototype.setSuccess = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.authpb.SignupResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.authpb.SignupResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated SignupError err = 3;\n * @return {!Array<!proto.authpb.SignupError>}\n */\nproto.authpb.SignupResponse.prototype.getErrList = function() {\n  return /** @type{!Array<!proto.authpb.SignupError>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.authpb.SignupError, 3));\n};\n\n\n/** @param {!Array<!proto.authpb.SignupError>} value */\nproto.authpb.SignupResponse.prototype.setErrList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.authpb.SignupError=} opt_value\n * @param {number=} opt_index\n * @return {!proto.authpb.SignupError}\n */\nproto.authpb.SignupResponse.prototype.addErr = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.authpb.SignupError, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n */\nproto.authpb.SignupResponse.prototype.clearErrList = function() {\n  this.setErrList([]);\n};\n\n\ngoog.object.extend(exports, proto.authpb);\n"],"sourceRoot":""}